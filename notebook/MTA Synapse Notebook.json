{
	"name": "MTA Synapse Notebook",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "mtasparkpool",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "28g",
			"driverCores": 4,
			"executorMemory": "28g",
			"executorCores": 4,
			"numExecutors": 2,
			"conf": {
				"spark.dynamicAllocation.enabled": "true",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "401a7c0e-c437-48e0-93a2-e15d4a672cc4"
			}
		},
		"metadata": {
			"saveOutput": true,
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/5ed90db2-31fb-43a4-a4f5-e58fff72a675/resourceGroups/MTA-pipeline/providers/Microsoft.Synapse/workspaces/mta-pipeline-workspace/bigDataPools/mtasparkpool",
				"name": "mtasparkpool",
				"type": "Spark",
				"endpoint": "https://mta-pipeline-workspace.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/mtasparkpool",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net"
				},
				"sparkVersion": "3.4",
				"nodeCount": 3,
				"cores": 4,
				"memory": 28,
				"automaticScaleJobs": true
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"outputs_hidden": true
					},
					"collapsed": false
				},
				"source": [
					"#load wifi data\n",
					"df = spark.read.csv('abfss://files@mtapipelinestorage.dfs.core.windows.net/wifi_locations/MTA_Wi-Fi_Locations_20241223.csv', header=True, inferSchema=True)\n",
					"display(df.limit(10))\n",
					"df.schema.fields"
				],
				"execution_count": 14
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#create wifi temp view\n",
					"new_df = spark.sql(\"SELECT STATION_COMPLEX AS station_complex, IS_HISTORICAL AS is_historical, ATT AS att, SPRINT AS sprint, TMOBILE AS tmobile FROM wifi_locations\")\n",
					"new_df.createOrReplaceTempView(\"wifi_locations\")\n",
					"display(new_df.limit(10))"
				],
				"execution_count": 20
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"#load rider data\n",
					"from pyspark.sql.functions import split, col\n",
					"\n",
					"response_df = spark.read.option(\"delimiter\", '\",\"').csv('abfss://files@mtapipelinestorage.dfs.core.windows.net/rider_data/Rider_data.csv', header=True, inferSchema=True)\n",
					"#new_df = rider_df.withColumn(\"Transit timestamp\", split(col(\"Prop_0\"), '\":\"').getItem(1)).withColumn(\"Transit model\", split(col(\"Prop_1\"), '\",\"').getItem(1))\n",
					"display(new_df.limit(10))"
				],
				"execution_count": 28
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": false
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					}
				},
				"source": [
					""
				],
				"execution_count": null
			}
		]
	}
}